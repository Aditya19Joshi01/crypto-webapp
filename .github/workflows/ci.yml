name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: crypto
          POSTGRES_PASSWORD: crypto
          POSTGRES_DB: cryptodb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U crypto" --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      matrix:
        python-version: [3.11]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest pytest-cov flake8 requests
      - name: Wait for services
        run: |
          echo "Waiting for Postgres to be available..."
          for i in {1..20}; do pg_isready -h localhost -p 5432 -U crypto && break || sleep 1; done
          echo "Waiting for Redis to be available..."
          for i in {1..20}; do redis-cli -h localhost ping && break || sleep 1; done
      - name: Prepare for pytest (disable plugin autoload)
        run: |
          # uninstall web3 pytest plugin that may try to import eth_typing incompatible versions
          pip uninstall -y web3 pytest-ethereum || true

      - name: Run unit tests
        env:
          PYTEST_DISABLE_PLUGIN_AUTOLOAD: '1'
        run: |
          pytest -q --maxfail=1
      - name: Run flake8
        run: |
          flake8
      - name: Run integration tests
        env:
          PYTEST_DISABLE_PLUGIN_AUTOLOAD: '1'
          RUN_INTEGRATION: 1
          BACKEND_URL: http://localhost:8000
          DATABASE_URL: postgresql+asyncpg://crypto:crypto@localhost:5432/cryptodb
          REDIS_URL: redis://localhost:6379/0
        run: |
          # Start the backend in background using uvicorn
          uvicorn backend.app:app --host 0.0.0.0 --port 8000 &
          # allow server to start
          sleep 3
          pytest -q -m integration
      - name: Coverage report
        env:
          PYTEST_DISABLE_PLUGIN_AUTOLOAD: '1'
        run: |
          pytest --maxfail=1 --disable-warnings -q --cov=backend --cov-report=xml
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml